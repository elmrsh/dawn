<style>
  .taggable-attributes {
    display: block;
    padding: 5rem 0;
  }
  .taggable-attributes--wrapper {
    display: grid;
    grid-template-columns: repeat(2,1fr);
    align-content: center;
    align-items: center;
    gap: 20px;
  }
  .taggable-attributes--image-container {
    display: block;
    width: 100%;
  }
  .taggable-attributes--image-container img {
    display: block;
    width: 100%;
  }
  .taggable-attributes__title {
    margin: 0;
    line-height: 1.2;
  }
  .taggable-attributes__description p {
    margin: 1rem 0;
    line-height: 1.3;
    padding: 0;
  }

  .taggable-attributes--picture {
    position: relative;
  }

  .taggable-attribute__trigger {
    display: block !important;
    width: 40px;
    height: 40px;
    display: block;
    border-radius: 50%;
    background-color: rgba(0,0,0,.5);
    box-shadow: 0 0 0 0 rgb(253, 251, 251);
    position: absolute;
    top: var(--position-y);
    left: var(--position-x);
    transform: translate(-50%,-50%);
    animation: pulse-white 3s infinite;
    cursor: pointer;
    transition: all .5s;
  }
  .taggable-attribute__trigger:before {
    content: "";
    display: block;
    width: 25px;
    height: 25px;
    background: #7C7C7A;
    transform: translate(-50%,-50%);
    position: absolute;
    top: 50%;
    left: 50%;
    border-radius: 50%;
  }
  .taggable-attribute__bubble {
    display: block;
    padding: 25px 20px 10px;
    background: var(--bubbles-bg);
    color: var(--bubbles-color);
    text-align: center;
    font-size:16px;
    position: absolute;
    top: var(--position-y);
    left: var(--position-x);
    border-radius: 10px;
    opacity: 0;
    transition: opacity .5s;
    max-width: 50%;
    transform: var(--alignment);
  }

  .taggable-attribute.active .taggable-attribute__bubble {
    opacity: 1;
  }
  .taggable-attribute.active .taggable-attribute__trigger {
    animation: none;
  }

  .taggable-attributes--content {
    text-align: var(--align);
  }

  .taggable-attributes__link {
    color: inherit;
  }

  @keyframes pulse-white {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(252, 252, 252, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 82, 82, 0);
    }
  }

  @media (max-width: 640px) {
    .taggable-attributes--wrapper {
      display: block;
    }
    .taggable-attributes--content {
      padding-top: 20px;
      text-align: var(--mobile-align);
    }
  }
</style>

<taggable-attributes
    class="taggable-attributes"
    style="
      --bubbles-bg: {{ section.settings.bubbles-bg }};
      --bubbles-color: {{ section.settings.bubbles-color }};
      --align: {{ section.settings.text-align }};
      --mobile-align: {{ section.settings.mobile-text-align }};
    ">
  <div class="taggable-attributes--wrapper page-width">
    <div class="taggable-attributes--picture">
      <div class="taggable-attributes--image-container">
        <img src="{{ section.settings.image | img_url: 'master' }}" alt="{{ section.settings.image.alt }}" />
      </div>
      {% for block in section.blocks %}
        <div class="taggable-attribute"
          style="
              --position-x: {{ block.settings.position-x }}%;
              --position-y: {{ block.settings.position-y }}%;
              --position-x-mobile: {{ block.settings.position-x-mobile }}%;
              --position-y-mobile: {{ block.settings.position-y-mobile }}%;
              {% if block.settings.alignment == "left" %}
                --alignment: translateX(0);
              {% elsif block.settings.alignment == "center" %}
                --alignment: translateX(-50%);
              {% else %}
                --alignment: translateX(-100%);
              {% endif %}
          ">
          <div class="taggable-attribute__bubble">{{ block.settings.content }}</div>
          <div class="taggable-attribute__trigger"></div>
        </div>
      {% endfor %}
    </div>
    <div class="taggable-attributes--content">
      <h1 class="taggable-attributes__title">{{ section.settings.title }}</h1>
      <div class="taggable-attributes__description">{{ section.settings.body }}</div>
      {% if section.settings.link != blank and section.settings.link-text != blank %}
        <a href="{{ section.settings.link }}" class="taggable-attributes__link">{{ section.settings.link-text }}</a>
      {% endif %}
    </div>
  </div>
</taggable-attributes>
<script type="module">
  class TaggableAttributes extends HTMLElement {
    constructor() {
      super();
      const attributes = this.querySelectorAll('.taggable-attribute')
      attributes.forEach(item => item.addEventListener('click', (e) => {
        if(!e.target.classList.contains('taggable-attribute__trigger')) return
        attributes.forEach(tb => tb !== item && tb.classList.remove('active'))
        item.classList.toggle('active')
      }))
    }
  }
  window.customElements.define('taggable-attributes',TaggableAttributes)
</script>

{% schema %}
{
  "name": "H - Taggable Attributes",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title of Section",
      "default": "Title of Section"
    },
    {
      "type": "richtext",
      "id": "body",
      "label": "Body"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Link"
    },
    {
      "type": "text",
      "id": "link-text",
      "label": "Link content"
    },
    {
      "type": "header",
      "content": "Bubbles settings"
    },
    {
      "type": "color",
      "id": "bubbles-bg",
      "label": "Bubbles Background color",
      "default":"#fff"

    },
    {
      "type": "color",
      "id": "bubbles-color",
      "label": "Bubbles Text Color",
      "default":"#000"
    },
    {
      "type":"select",
      "id": "text-align",
      "label": "Text Align",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type":"select",
      "id": "mobile-text-align",
      "label":"Mobile Text Align",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    }
  ],
  "blocks": [
    {
      "type": "bubble",
      "name": "Bubble",
      "settings": [
        {
          "type":"text",
          "id": "content",
          "label":"Content"
        },
        {
          "type":"range",
          "id": "position-x",
          "label":"Position X",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 50
        },
        {
          "type":"range",
          "id": "position-y",
          "label":"Position Y",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 50
        },
        {
          "type":"range",
          "id": "position-x-mobile",
          "label":"Position X on mobile",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 50
        },
        {
          "type":"range",
          "id": "position-y-mobile",
          "label":"Position Y on mobile",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 50
        },
        {
          "type":"select",
          "id": "alignment",
          "label":"Bubble Alignment",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "H - Taggable Attributes"
    }
  ]
}
{% endschema %}